###########
INSTALL.txt
###########

The installation process for alti+server is very straight forward.  The
software consists of two necessary files.

  1. alti+server
  2. custom_json_commands.txt

There are two choices for the second file.  If you require your server
to run more than 75 maps, it is recommended you use the file from GitHub
named small_custom_json_commands.txt and rename it.  If you can safely
run with fewer than 75 maps, you should use the original file.  It provides
help to users on how to use the custom commands, making the server much
easier to use and administrate.


======================
Step 0, Setup Altitude
======================
You must install altitude, and use the server_configurator to setup your
server before beginning.  This is true if you use alti+server or not.
When configuring your server, remember that you can only have one server
if you use alti+server.  server_configurator allows you to configure
multiple servers, as the base Nimbly code supports this.  However, this
does not work with alti+server.


=======================
Step 1, the alti+server
=======================

Copy this file to wherever you want.  It does not need to be co-located
with the Altitiude software, the author stores this code in the account
which runs the software's ~/bin directory.

Find the $INSTALL_ROOT variable and change it to the directory where you
installed the altitude server.  This defaults to ~/altitude, as that is
what the altitude.sh program defaults to.  If you chaned this value when
you installed altitude, then change it here too.

Some people like to install server maps in a seperate location like
~/altitude/maps/download.  If this is the case for you, set $MAPDIR
to be the part of that location past "maps/".  In our example, you would
set $MAPDIR to 'download'.  It is recommended that you only change this
if you must.  You can server more maps, and it is easier on server users
to server files from the root maps directory.

Edit this file and find the %OPITIONS section very close to the top.  Here,
review and change any options you need.  %OPTIONS are as such:

  
  updateMapList   Specify if alti+server can change your launcher_config.xml
                  file with an updated map list and map rotation list.  These
                  lists will be automatically randomized each time the server
                  restarts.  Furthermore, if your map list is too large for
                  the Altitude game engine to support, it will trim the list
                  focusing on keeping more recent and popular maps in the
                  list, and discarding less popular/older maps.  This feature
                  is required if you wish to have the map upload feature
                  automatically add new maps to the map list.  Without this
                  feature, you will need to edit your launcher_config.xml
                  file by hand (or with the server_configurator) to manually
                  add new maps.
                  Set to 1 to enable this feature, set to 0 to disable.
    
  ulSizeLimit	   Specify the maximum size of an uploaded map.  This number
                  is an integer which represents Bytes.  Since you may allow
                  other people to upload files to your server, there needs
                  to be some sort of maximum value.  Please note that the
                  file may need to be fully downloaded before its size can
                  be checked.  If the size is above ulSizeLimit, then the
                  map file will be promptly deleted.

  boxColor        Two sections of the console curses interface are encapsulated
                  in boxes.  This value specifes the color of these boxes.
                  The color must fall into the limited Curses color name
                  values of black, blue, cyan, green, magenta, red, white, or
                  yellow.

  chatFromColor   In the chat window, the name of the person sending a chat
                  message will be displayed.  This value is the color of the
                  nickname text of that person.  You must use the limited
                  Curses color name values as defined above.

  chatToColor     In the chat window, a specifer as to the recipients of a
                  message is displayed.  This value is the color of that
                  specification.  You must use the limited Curses color name
                  values as defined above.

  uiPrettyBoxes   Curses can draw attractive boxes on the screeen using either
                  a terminal's Alternate Character Set (ACS) or Unicode
                  drawing characters.  This almost always works, but when it
                  doesn't, the experience is quite appalling.
                  Setting this to 0 will disable these specialty characters
                  and just the standard ASCII '-' and '|' characters.  Setting
                  this to 1 will tell Curses to draw attractive boxes on the
                  terminal screen.

  noviceLevel     Require the novice users (Ace 0) attain at least this level
                  before being allowed to play on the server.  Players below
                  this level will be forced to spectate, and sent a server
                  message outlining the policy.  Continued attempts to join
                  will result in a kick.  This value differes from the server
                  enforced level requirements, as it only affects players of
                  Ace Rank 0.

  aceLevel        Require users who have recently Aced (anywhere from 1 to 10)
                  to have at least obtained this level before being allowed to
                  play.  Players below this level will be forced to spectate,
                  and sent a server message outlining the policy.  Continued
                  attempts to join will result in a kick.  This value differs
                  from the server enforced level requirements, as it only
                  affects players of Ace Ranks 1 through 10.

  snarkChance     Specify the likelihood that a snarky comment will be made
                  about a player.  The server is configured with a number of
                  funny comments to make about plane choices, perks, skins,
                  etc.  Events which cause these to be displayed are things
                  like spawning.  So, this number is the likelihood per user
                  that this happens.  If you set this to 0, then snarky
                  comments are disabled.

  bullyKick       Online games with chat functionality will, from time to time,
                  attract players who play a sort of meta-game, one where
                  (for them) the real game is to abuse other players and create
                  havoc.  These sorts of individuals often result to vulgar
                  language to acheive their goals.  The server looks for these
                  types of behaviour and warns players who engage in it.  After
                  many repeated attempts, the server will kick the bullies.
                  Setting this to 1 enables this player protection and the
                  support of a positive gamming experience.  Setting this to
                  0 disables the servers ability to protect players from this
                  sort of harrasment.

  rotationRE      Not all maps need to be in the map rotation, and should only
                  be available via an admin /changeMap or a /vote changeMap.
                  This value is a regular expression (so you can seperate
                  values with a pipe "|" character) which specifies which maps
                  should be in rotation.  For example, "1de_coop" maps often
                  kill servers, causing players to quit.  This can be used
                  to keep this from happening.  Conversely, it could also
                  be used to make only 1-life games occur.  It is the
                  perogative of the server administrator.

  superAdmin      Some servers have two levels of admins.  Admins whose job
                  it is to keep the peace, and admins who support the server.
                  This setting allows for a distinction between these two types
                  of admins with respect to alti+server's custom commands.
                  Commands which add or remove maps are super admin commands.
                  Also are commands which allow the restart of a server. Set
                  this to "admin" to make admins and super admins the same
                  group.  Set this to "console", and super admin commands
                  will only be available for users at the alti+server console.
                  Finally, setting this to "list" will allow a list of
                  vaporIds to be set with actual super admin users.
   
If you set 'superAdmin' to 'list', then add the vaporId of any super admins
to the @SUPER_ADMINS array just below %OPTIONS.

Next, change the @MOTD to say whatever you would like new users to see when
they login.  Each element of the array will be a new line and message from
the server.

Save this file, it is configured and ready for your use.


=======================
Step 2, the alti+server
=======================
Copy the appropriate custom_json_commands.txt file to your ~/altitude/servers/
directory (or wherever you installed altitude).  This file should be in the
same location as your launcher_config.xml file.

Choose the standard file first, and only switch to the small version of the
file (you will have to rename it from small_custom_json_commands.txt to
custom_json_commands.txt) if you need to run more than 75 maps on the server.


=========================
Step 3, Start alti+server
=========================
You should be ready to go to start your server, give it a try.  It is highly
recommended that alti+server be run from a detatchable terminal.  Good
choices are GNU Screen, tmux, and dtach.  This will allow for the game server
to continue to function normally, even in the event of a disconnect.

At this time, there is no version of alti+server which can run headless, and
in the background.

